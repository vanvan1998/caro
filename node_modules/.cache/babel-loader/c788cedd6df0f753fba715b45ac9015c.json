{"ast":null,"code":"import _defineProperty from \"D:\\\\react\\\\caro\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// import { combineReducers } from 'redux';\nimport * as types from '../constants/constants';\nconst history = [{\n  squares: Array.from(Array(20), () => new Array(20))\n}];\nconst initialState = {\n  history,\n  stepNumber: 0,\n  xIsNext: true,\n  col: [0],\n  row: [0],\n  Sortvalue: 'sorted descending',\n  temp: [],\n  winner: false,\n  color: 'black'\n};\n\nfunction calculateWinner(squares, state) {\n  const st = _objectSpread({}, state);\n\n  st.winner = false;\n\n  for (let i = 0; i < 20; i += 1) {\n    for (let j = 0; j < 20; j += 1) {\n      if (squares[i][j]) {\n        if (squares[i][j] === squares[i][j + 1] && squares[i][j] === squares[i][j + 2] && squares[i][j] === squares[i][j + 3] && squares[i][j] === squares[i][j + 4]) {\n          if (!(squares[i][j + 5] && squares[i][j + 5] !== squares[i][j] && squares[i][j - 1] && squares[i][j - 1] !== squares[i][j])) {\n            st.temp[0] = i;\n            st.temp[1] = j;\n\n            for (let m = 2; m < 9; m += 2) {\n              st.temp[m] = i;\n              st.temp[m + 1] = j + m / 2;\n            }\n\n            st.winner = squares[i][j];\n            return st; // đường ngang\n          }\n        } else if (i < 16) {\n          if (squares[i][j] === squares[i + 1][j] && squares[i][j] === squares[i + 2][j] && squares[i][j] === squares[i + 3][j] && squares[i][j] === squares[i + 4][j]) {\n            if (i > 14 || i < 1) {\n              st.temp[0] = i;\n              st.temp[1] = j;\n\n              for (let m = 2; m < 9; m += 2) {\n                st.temp[m] = i + m / 2;\n                st.temp[m + 1] = j;\n              }\n\n              st.winner = squares[i][j];\n              return st; // đường dọc\n            }\n\n            if (!(squares[i + 5][j] && squares[i + 5][j] !== squares[i][j] && squares[i - 1][j] && squares[i - 1][j] !== squares[i][j])) {\n              st.temp[0] = i;\n              st.temp[1] = j;\n\n              for (let m = 2; m < 9; m += 2) {\n                st.temp[m] = i + m / 2;\n                st.temp[m + 1] = j;\n              }\n\n              st.winner = squares[i][j];\n              return st; // đường dọc\n            }\n          } else if (squares[i][j] === squares[i + 1][j + 1] && squares[i][j] === squares[i + 2][j + 2] && squares[i][j] === squares[i + 3][j + 3] && squares[i][j] === squares[i + 4][j + 4]) {\n            if (i > 14 || i < 1) {\n              st.temp[0] = i;\n              st.temp[1] = j;\n\n              for (let m = 2; m < 9; m += 2) {\n                st.temp[m] = i + m / 2;\n                st.temp[m + 1] = j + m / 2;\n              }\n\n              st.winner = squares[i][j];\n              return st; // đường chéo \\\n            }\n\n            if (!(squares[i + 5][j + 5] && squares[i + 5][j + 5] !== squares[i][j] && squares[i - 1][j - 1] && squares[i - 1][j - 1] !== squares[i][j])) {\n              st.temp[0] = i;\n              st.temp[1] = j;\n\n              for (let m = 2; m < 9; m += 2) {\n                st.temp[m] = i + m / 2;\n                st.temp[m + 1] = j + m / 2;\n              }\n\n              st.winner = squares[i][j];\n              return st; // đường chéo \\\n            }\n          } else if (squares[i][j] === squares[i + 1][j - 1] && squares[i][j] === squares[i + 2][j - 2] && squares[i][j] === squares[i + 3][j - 3] && squares[i][j] === squares[i + 4][j - 4]) {\n            if (i < 5 || i > 18) {\n              st.temp[0] = i;\n              st.temp[1] = j;\n\n              for (let m = 2; m < 9; m += 2) {\n                st.temp[m] = i + m / 2;\n                st.temp[m + 1] = j - m / 2;\n              }\n\n              st.winner = squares[i][j];\n              return st; // đường chéo /\n            }\n\n            if (!(squares[i - 5][j + 5] && squares[i - 5][j + 5] !== squares[i][j] && squares[i + 1][j - 1] && squares[i + 1][j - 1] !== squares[i][j])) {\n              st.temp[0] = i;\n              st.temp[1] = j;\n\n              for (let m = 2; m < 9; m += 2) {\n                st.temp[m] = i + m / 2;\n                st.temp[m + 1] = j - m / 2;\n              }\n\n              st.winner = squares[i][j];\n              return st; // đường chéo /\n            }\n          }\n        }\n      }\n    }\n  }\n\n  return st;\n}\n\nfunction handleClick(i, j, state) {\n  const st = _objectSpread({}, state);\n\n  const historytemp = st.history.slice(0, st.stepNumber + 1);\n  const col = st.col.slice(0, st.stepNumber + 1);\n  const row = st.row.slice(0, st.stepNumber + 1);\n  const current = historytemp[historytemp.length - 1];\n  const squares = JSON.parse(JSON.stringify(current.squares));\n  const sttemp = calculateWinner(squares, st);\n\n  if (sttemp.winner || squares[i][j]) {\n    return st;\n  }\n\n  squares[i][j] = st.xIsNext ? 'X' : 'O';\n  st.history = historytemp.concat([{\n    squares\n  }]);\n  st.stepNumber = historytemp.length;\n  st.xIsNext = !st.xIsNext;\n  st.col = col.concat(i + 1);\n  st.row = row.concat(j + 1);\n  return st;\n}\n\nfunction jumpTo(step, state) {\n  const st = _objectSpread({}, state);\n\n  st.stepNumber = step;\n  st.xIsNext = step % 2 === 0;\n  return st;\n}\n\nfunction onclickSort(Sortvalue, state) {\n  const st = _objectSpread({}, state);\n\n  if (Sortvalue === 'sorted descending') {\n    st.Sortvalue = 'Sort ascending';\n  } else {\n    st.Sortvalue = 'sorted descending';\n  }\n\n  return st;\n}\n\nconst GameReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.boardClick:\n      {\n        return handleClick(action.data.i, action.data.j, state);\n      }\n\n    case types.goToMoveClick:\n      {\n        return jumpTo(action.data.step, state);\n      }\n\n    case types.checkWinner:\n      {\n        return calculateWinner(action.data.squares, state);\n      }\n\n    case types.sortClick:\n      {\n        return onclickSort(state.Sortvalue, state);\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default GameReducer;","map":{"version":3,"sources":["D:\\react\\caro\\src\\reducers\\Game.Reducers.js"],"names":["types","history","squares","Array","from","initialState","stepNumber","xIsNext","col","row","Sortvalue","temp","winner","color","calculateWinner","state","st","i","j","m","handleClick","historytemp","slice","current","length","JSON","parse","stringify","sttemp","concat","jumpTo","step","onclickSort","GameReducer","action","type","boardClick","data","goToMoveClick","checkWinner","sortClick"],"mappings":"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","sourcesContent":["// import { combineReducers } from 'redux';\r\nimport * as types from '../constants/constants';\r\n\r\nconst history = [\r\n  {\r\n    squares: Array.from(Array(20), () => new Array(20))\r\n  }\r\n];\r\n\r\nconst initialState = {\r\n  history,\r\n  stepNumber: 0,\r\n  xIsNext: true,\r\n  col: [0],\r\n  row: [0],\r\n  Sortvalue: 'sorted descending',\r\n  temp: [],\r\n  winner: false,\r\n  color: 'black'\r\n};\r\n\r\nfunction calculateWinner(squares, state) {\r\n  const st = { ...state };\r\n  st.winner = false;\r\n  for (let i = 0; i < 20; i += 1) {\r\n    for (let j = 0; j < 20; j += 1) {\r\n      if (squares[i][j]) {\r\n        if (\r\n          squares[i][j] === squares[i][j + 1] &&\r\n          squares[i][j] === squares[i][j + 2] &&\r\n          squares[i][j] === squares[i][j + 3] &&\r\n          squares[i][j] === squares[i][j + 4]\r\n        ) {\r\n          if (\r\n            !(\r\n              squares[i][j + 5] &&\r\n              squares[i][j + 5] !== squares[i][j] &&\r\n              squares[i][j - 1] &&\r\n              squares[i][j - 1] !== squares[i][j]\r\n            )\r\n          ) {\r\n            st.temp[0] = i;\r\n            st.temp[1] = j;\r\n            for (let m = 2; m < 9; m += 2) {\r\n              st.temp[m] = i;\r\n              st.temp[m + 1] = j + m / 2;\r\n            }\r\n            st.winner = squares[i][j];\r\n            return st; // đường ngang\r\n          }\r\n        } else if (i < 16) {\r\n          if (\r\n            squares[i][j] === squares[i + 1][j] &&\r\n            squares[i][j] === squares[i + 2][j] &&\r\n            squares[i][j] === squares[i + 3][j] &&\r\n            squares[i][j] === squares[i + 4][j]\r\n          ) {\r\n            if (i > 14 || i < 1) {\r\n              st.temp[0] = i;\r\n              st.temp[1] = j;\r\n              for (let m = 2; m < 9; m += 2) {\r\n                st.temp[m] = i + m / 2;\r\n                st.temp[m + 1] = j;\r\n              }\r\n              st.winner = squares[i][j];\r\n              return st; // đường dọc\r\n            }\r\n            if (\r\n              !(\r\n                squares[i + 5][j] &&\r\n                squares[i + 5][j] !== squares[i][j] &&\r\n                squares[i - 1][j] &&\r\n                squares[i - 1][j] !== squares[i][j]\r\n              )\r\n            ) {\r\n              st.temp[0] = i;\r\n              st.temp[1] = j;\r\n              for (let m = 2; m < 9; m += 2) {\r\n                st.temp[m] = i + m / 2;\r\n                st.temp[m + 1] = j;\r\n              }\r\n              st.winner = squares[i][j];\r\n              return st; // đường dọc\r\n            }\r\n          } else if (\r\n            squares[i][j] === squares[i + 1][j + 1] &&\r\n            squares[i][j] === squares[i + 2][j + 2] &&\r\n            squares[i][j] === squares[i + 3][j + 3] &&\r\n            squares[i][j] === squares[i + 4][j + 4]\r\n          ) {\r\n            if (i > 14 || i < 1) {\r\n              st.temp[0] = i;\r\n              st.temp[1] = j;\r\n              for (let m = 2; m < 9; m += 2) {\r\n                st.temp[m] = i + m / 2;\r\n                st.temp[m + 1] = j + m / 2;\r\n              }\r\n              st.winner = squares[i][j];\r\n              return st; // đường chéo \\\r\n            }\r\n            if (\r\n              !(\r\n                squares[i + 5][j + 5] &&\r\n                squares[i + 5][j + 5] !== squares[i][j] &&\r\n                squares[i - 1][j - 1] &&\r\n                squares[i - 1][j - 1] !== squares[i][j]\r\n              )\r\n            ) {\r\n              st.temp[0] = i;\r\n              st.temp[1] = j;\r\n              for (let m = 2; m < 9; m += 2) {\r\n                st.temp[m] = i + m / 2;\r\n                st.temp[m + 1] = j + m / 2;\r\n              }\r\n              st.winner = squares[i][j];\r\n              return st; // đường chéo \\\r\n            }\r\n          } else if (\r\n            squares[i][j] === squares[i + 1][j - 1] &&\r\n            squares[i][j] === squares[i + 2][j - 2] &&\r\n            squares[i][j] === squares[i + 3][j - 3] &&\r\n            squares[i][j] === squares[i + 4][j - 4]\r\n          ) {\r\n            if (i < 5 || i > 18) {\r\n              st.temp[0] = i;\r\n              st.temp[1] = j;\r\n              for (let m = 2; m < 9; m += 2) {\r\n                st.temp[m] = i + m / 2;\r\n                st.temp[m + 1] = j - m / 2;\r\n              }\r\n              st.winner = squares[i][j];\r\n              return st; // đường chéo /\r\n            }\r\n            if (\r\n              !(\r\n                squares[i - 5][j + 5] &&\r\n                squares[i - 5][j + 5] !== squares[i][j] &&\r\n                squares[i + 1][j - 1] &&\r\n                squares[i + 1][j - 1] !== squares[i][j]\r\n              )\r\n            ) {\r\n              st.temp[0] = i;\r\n              st.temp[1] = j;\r\n              for (let m = 2; m < 9; m += 2) {\r\n                st.temp[m] = i + m / 2;\r\n                st.temp[m + 1] = j - m / 2;\r\n              }\r\n              st.winner = squares[i][j];\r\n              return st; // đường chéo /\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return st;\r\n}\r\n\r\nfunction handleClick(i, j, state) {\r\n  const st = { ...state };\r\n  const historytemp = st.history.slice(0, st.stepNumber + 1);\r\n  const col = st.col.slice(0, st.stepNumber + 1);\r\n  const row = st.row.slice(0, st.stepNumber + 1);\r\n  const current = historytemp[historytemp.length - 1];\r\n  const squares = JSON.parse(JSON.stringify(current.squares));\r\n  const sttemp = calculateWinner(squares, st);\r\n  if (sttemp.winner || squares[i][j]) {\r\n    return st;\r\n  }\r\n\r\n  squares[i][j] = st.xIsNext ? 'X' : 'O';\r\n\r\n  st.history = historytemp.concat([\r\n    {\r\n      squares\r\n    }\r\n  ]);\r\n  st.stepNumber = historytemp.length;\r\n  st.xIsNext = !st.xIsNext;\r\n  st.col = col.concat(i + 1);\r\n  st.row = row.concat(j + 1);\r\n  return st;\r\n}\r\n\r\nfunction jumpTo(step, state) {\r\n  const st = { ...state };\r\n\r\n  st.stepNumber = step;\r\n  st.xIsNext = step % 2 === 0;\r\n  return st;\r\n}\r\n\r\nfunction onclickSort(Sortvalue, state) {\r\n  const st = { ...state };\r\n  if (Sortvalue === 'sorted descending') {\r\n    st.Sortvalue = 'Sort ascending';\r\n  } else {\r\n    st.Sortvalue = 'sorted descending';\r\n  }\r\n  return st;\r\n}\r\n\r\nconst GameReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.boardClick: {\r\n      return handleClick(action.data.i, action.data.j, state);\r\n    }\r\n    case types.goToMoveClick: {\r\n      return jumpTo(action.data.step, state);\r\n    }\r\n    case types.checkWinner: {\r\n      return calculateWinner(action.data.squares, state);\r\n    }\r\n    case types.sortClick: {\r\n      return onclickSort(state.Sortvalue, state);\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default GameReducer;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { connect } from 'react-redux';\nimport * as actions from '../actions/actions';\nimport Register from '../components/register';\n\nconst mapStateToProps = state => {\n  const RegisterState = state.RegisterReducer;\n  return {\n    username: RegisterState.username,\n    password: RegisterState.password,\n    isRegister: RegisterState.isRegister,\n    CheckLoadRegister: RegisterState.CheckLoadRegister\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    Register: (name, email, password) => {\n      dispatch(actions.registerRequest(name, email, password));\n    }\n  };\n};\n\nconst RegisterContainer = connect(mapStateToProps, mapDispatchToProps)(Register);\nexport default RegisterContainer;","map":{"version":3,"sources":["D:\\react\\caro\\src\\containers\\register.container.js"],"names":["connect","actions","Register","mapStateToProps","state","RegisterState","RegisterReducer","username","password","isRegister","CheckLoadRegister","mapDispatchToProps","dispatch","name","email","registerRequest","RegisterContainer"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,oBAAzB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,QAAMC,aAAa,GAAGD,KAAK,CAACE,eAA5B;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAEF,aAAa,CAACE,QADnB;AAELC,IAAAA,QAAQ,EAAEH,aAAa,CAACG,QAFnB;AAGLC,IAAAA,UAAU,EAAEJ,aAAa,CAACI,UAHrB;AAILC,IAAAA,iBAAiB,EAAEL,aAAa,CAACK;AAJ5B,GAAP;AAMD,CARD;;AAUA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLV,IAAAA,QAAQ,EAAE,CAACW,IAAD,EAAOC,KAAP,EAAcN,QAAd,KAA2B;AACnCI,MAAAA,QAAQ,CAACX,OAAO,CAACc,eAAR,CAAwBF,IAAxB,EAA8BC,KAA9B,EAAqCN,QAArC,CAAD,CAAR;AACD;AAHI,GAAP;AAKD,CAND;;AAOA,MAAMQ,iBAAiB,GAAGhB,OAAO,CAC/BG,eAD+B,EAE/BQ,kBAF+B,CAAP,CAGxBT,QAHwB,CAA1B;AAKA,eAAec,iBAAf","sourcesContent":["import { connect } from 'react-redux';\r\nimport * as actions from '../actions/actions';\r\nimport Register from '../components/register';\r\n\r\nconst mapStateToProps = state => {\r\n  const RegisterState = state.RegisterReducer;\r\n  return {\r\n    username: RegisterState.username,\r\n    password: RegisterState.password,\r\n    isRegister: RegisterState.isRegister,\r\n    CheckLoadRegister: RegisterState.CheckLoadRegister\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    Register: (name, email, password) => {\r\n      dispatch(actions.registerRequest(name, email, password));\r\n    }\r\n  };\r\n};\r\nconst RegisterContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Register);\r\n\r\nexport default RegisterContainer;\r\n"]},"metadata":{},"sourceType":"module"}
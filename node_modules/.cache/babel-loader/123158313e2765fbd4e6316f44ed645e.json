{"ast":null,"code":"import * as types from '../constants/constants';\n\nconst axios = require('axios');\n\nexport const checkWinner = squares => {\n  return {\n    type: types.checkWinner,\n    data: {\n      squares\n    }\n  };\n};\nexport const boardClick = (i, j) => {\n  return {\n    type: types.boardClick,\n    data: {\n      i,\n      j\n    }\n  };\n};\nexport const goToMoveClick = step => {\n  return {\n    type: types.goToMoveClick,\n    data: {\n      step\n    }\n  };\n};\nexport const sortClick = () => {\n  return {\n    type: types.sortClick\n  };\n};\n\nfunction OnclickLogin(email, password) {\n  const res = axios.post('https://restful1612800.herokuapp.com/users/login', {\n    email,\n    password\n  }).catch(error => {\n    return error;\n  });\n  return res;\n}\n\nexport const login = (email, password, res) => {\n  return {\n    type: types.login,\n    data: {\n      email,\n      password,\n      res\n    }\n  };\n};\nexport const loginRequest = (email, password) => {\n  return dispatch => {\n    return OnclickLogin(email, password).then(res => {\n      dispatch(login(email, password, res));\n    });\n  };\n};\n\nfunction OnclickRegister(name, email, password) {\n  const res = axios.post('https://restful1612800.herokuapp.com/users/register', {\n    name,\n    email,\n    password\n  }).catch(error => {\n    return error;\n  });\n  return res;\n}\n\nexport const register = (name, email, password, res) => {\n  return {\n    type: types.register,\n    data: {\n      name,\n      email,\n      password,\n      res\n    }\n  };\n};\nexport const registerRequest = (name, email, password) => {\n  return dispatch => {\n    return OnclickRegister(name, email, password).then(res => {\n      dispatch(register(name, email, password, res));\n    });\n  };\n};\nexport const LogOut = () => {\n  return {\n    type: types.logOut\n  };\n};","map":{"version":3,"sources":["D:\\react\\Caro\\src\\actions\\actions.js"],"names":["types","axios","require","checkWinner","squares","type","data","boardClick","i","j","goToMoveClick","step","sortClick","OnclickLogin","email","password","res","post","catch","error","login","loginRequest","dispatch","then","OnclickRegister","name","register","registerRequest","LogOut","logOut"],"mappings":"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","sourcesContent":["import * as types from '../constants/constants';\r\n\r\nconst axios = require('axios');\r\n\r\nexport const checkWinner = squares => {\r\n  return {\r\n    type: types.checkWinner,\r\n    data: { squares }\r\n  };\r\n};\r\n\r\nexport const boardClick = (i, j) => {\r\n  return {\r\n    type: types.boardClick,\r\n    data: { i, j }\r\n  };\r\n};\r\n\r\nexport const goToMoveClick = step => {\r\n  return {\r\n    type: types.goToMoveClick,\r\n    data: { step }\r\n  };\r\n};\r\n\r\nexport const sortClick = () => {\r\n  return {\r\n    type: types.sortClick\r\n  };\r\n};\r\n\r\nfunction OnclickLogin(email, password) {\r\n  const res = axios\r\n    .post('https://restful1612800.herokuapp.com/users/login', {\r\n      email,\r\n      password\r\n    })\r\n    .catch(error => {\r\n      return error;\r\n    });\r\n  return res;\r\n}\r\n\r\nexport const login = (email, password, res) => {\r\n  return {\r\n    type: types.login,\r\n    data: { email, password, res }\r\n  };\r\n};\r\n\r\nexport const loginRequest = (email, password) => {\r\n  return dispatch => {\r\n    return OnclickLogin(email, password).then(res => {\r\n      dispatch(login(email, password, res));\r\n    });\r\n  };\r\n};\r\n\r\nfunction OnclickRegister(name, email, password) {\r\n  const res = axios\r\n    .post('https://restful1612800.herokuapp.com/users/register', {\r\n      name,\r\n      email,\r\n      password\r\n    })\r\n    .catch(error => {\r\n      return error;\r\n    });\r\n  return res;\r\n}\r\n\r\nexport const register = (name, email, password, res) => {\r\n  return {\r\n    type: types.register,\r\n    data: { name, email, password, res }\r\n  };\r\n};\r\n\r\nexport const registerRequest = (name, email, password) => {\r\n  return dispatch => {\r\n    return OnclickRegister(name, email, password).then(res => {\r\n      dispatch(register(name, email, password, res));\r\n    });\r\n  };\r\n};\r\n\r\nexport const LogOut = () => {\r\n  return {\r\n    type: types.logOut\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"D:\\\\react\\\\caro\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as types from '../constants/constants'; // const axios = require('axios');\n\nconst initialState = {\n  email: '',\n  password: '',\n  isLogin: false,\n  token: '',\n  username: ''\n};\n\nconst LoginReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.login:\n      {\n        const st = _objectSpread({}, state);\n\n        st.email = action.data.email;\n        st.password = action.data.password;\n\n        try {\n          st.token = action.data.res.data.token;\n          st.username = action.data.res.data.user.name;\n          console.log(st);\n          st.isLogin = true;\n        } catch (err) {\n          st.token = 'err';\n        }\n\n        return st;\n      }\n\n    case types.logOut:\n      {\n        const st = _objectSpread({}, state);\n\n        st.username = '';\n        st.token = '';\n        st.isLogin = false;\n        st.email = '';\n        st.password = '';\n        return st;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default LoginReducer;","map":{"version":3,"sources":["D:\\react\\caro\\src\\reducers\\Login.Reducers.js"],"names":["types","initialState","email","password","isLogin","token","username","LoginReducer","state","action","type","login","st","data","res","user","name","console","log","err","logOut"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,wBAAvB,C,CAEA;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,QAAQ,EAAE,EAFS;AAGnBC,EAAAA,OAAO,EAAE,KAHU;AAInBC,EAAAA,KAAK,EAAE,EAJY;AAKnBC,EAAAA,QAAQ,EAAE;AALS,CAArB;;AAQA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,KAAK,CAACW,KAAX;AAAkB;AAChB,cAAMC,EAAE,qBAAQJ,KAAR,CAAR;;AACAI,QAAAA,EAAE,CAACV,KAAH,GAAWO,MAAM,CAACI,IAAP,CAAYX,KAAvB;AACAU,QAAAA,EAAE,CAACT,QAAH,GAAcM,MAAM,CAACI,IAAP,CAAYV,QAA1B;;AACA,YAAI;AACFS,UAAAA,EAAE,CAACP,KAAH,GAAWI,MAAM,CAACI,IAAP,CAAYC,GAAZ,CAAgBD,IAAhB,CAAqBR,KAAhC;AACAO,UAAAA,EAAE,CAACN,QAAH,GAAcG,MAAM,CAACI,IAAP,CAAYC,GAAZ,CAAgBD,IAAhB,CAAqBE,IAArB,CAA0BC,IAAxC;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYN,EAAZ;AACAA,UAAAA,EAAE,CAACR,OAAH,GAAa,IAAb;AACD,SALD,CAKE,OAAOe,GAAP,EAAY;AACZP,UAAAA,EAAE,CAACP,KAAH,GAAW,KAAX;AACD;;AACD,eAAOO,EAAP;AACD;;AACD,SAAKZ,KAAK,CAACoB,MAAX;AAAmB;AACjB,cAAMR,EAAE,qBAAQJ,KAAR,CAAR;;AACAI,QAAAA,EAAE,CAACN,QAAH,GAAc,EAAd;AACAM,QAAAA,EAAE,CAACP,KAAH,GAAW,EAAX;AACAO,QAAAA,EAAE,CAACR,OAAH,GAAa,KAAb;AACAQ,QAAAA,EAAE,CAACV,KAAH,GAAW,EAAX;AACAU,QAAAA,EAAE,CAACT,QAAH,GAAc,EAAd;AACA,eAAOS,EAAP;AACD;;AACD;AACE,aAAOJ,KAAP;AAzBJ;AA2BD,CA5BD;;AA8BA,eAAeD,YAAf","sourcesContent":["import * as types from '../constants/constants';\r\n\r\n// const axios = require('axios');\r\n\r\nconst initialState = {\r\n  email: '',\r\n  password: '',\r\n  isLogin: false,\r\n  token: '',\r\n  username: ''\r\n};\r\n\r\nconst LoginReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.login: {\r\n      const st = { ...state };\r\n      st.email = action.data.email;\r\n      st.password = action.data.password;\r\n      try {\r\n        st.token = action.data.res.data.token;\r\n        st.username = action.data.res.data.user.name;\r\n        console.log(st);\r\n        st.isLogin = true;\r\n      } catch (err) {\r\n        st.token = 'err';\r\n      }\r\n      return st;\r\n    }\r\n    case types.logOut: {\r\n      const st = { ...state };\r\n      st.username = '';\r\n      st.token = '';\r\n      st.isLogin = false;\r\n      st.email = '';\r\n      st.password = '';\r\n      return st;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default LoginReducer;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"D:\\\\react\\\\caro\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as types from '../constants/constants';\nconst initialState = {\n  isRegister: false,\n  CheckLoadRegister: false\n};\n\nconst RegisterReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.register:\n      {\n        const st = _objectSpread({}, state);\n\n        st.username = action.data.username;\n        st.password = action.data.password;\n\n        try {\n          st.name = action.data.res.data.name;\n          st.isRegister = true;\n        } catch (err) {\n          st.CheckLoadRegister = true;\n        }\n\n        return st;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default RegisterReducer;","map":{"version":3,"sources":["D:\\react\\caro\\src\\reducers\\register.reducers.js"],"names":["types","initialState","isRegister","CheckLoadRegister","RegisterReducer","state","action","type","register","st","username","data","password","name","res","err"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,wBAAvB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,KADO;AAEnBC,EAAAA,iBAAiB,EAAE;AAFA,CAArB;;AAKA,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AACxD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,KAAK,CAACQ,QAAX;AAAqB;AACnB,cAAMC,EAAE,qBAAQJ,KAAR,CAAR;;AACAI,QAAAA,EAAE,CAACC,QAAH,GAAcJ,MAAM,CAACK,IAAP,CAAYD,QAA1B;AACAD,QAAAA,EAAE,CAACG,QAAH,GAAcN,MAAM,CAACK,IAAP,CAAYC,QAA1B;;AACA,YAAI;AACFH,UAAAA,EAAE,CAACI,IAAH,GAAUP,MAAM,CAACK,IAAP,CAAYG,GAAZ,CAAgBH,IAAhB,CAAqBE,IAA/B;AACAJ,UAAAA,EAAE,CAACP,UAAH,GAAgB,IAAhB;AACD,SAHD,CAGE,OAAOa,GAAP,EAAY;AACZN,UAAAA,EAAE,CAACN,iBAAH,GAAuB,IAAvB;AACD;;AACD,eAAOM,EAAP;AACD;;AACD;AACE,aAAOJ,KAAP;AAdJ;AAgBD,CAjBD;;AAmBA,eAAeD,eAAf","sourcesContent":["import * as types from '../constants/constants';\r\n\r\nconst initialState = {\r\n  isRegister: false,\r\n  CheckLoadRegister: false,\r\n};\r\n\r\nconst RegisterReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.register: {\r\n      const st = { ...state };\r\n      st.username = action.data.username;\r\n      st.password = action.data.password;\r\n      try {\r\n        st.name = action.data.res.data.name;\r\n        st.isRegister = true;\r\n      } catch (err) {\r\n        st.CheckLoadRegister = true;\r\n      }\r\n      return st;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default RegisterReducer;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\caro\\\\src\\\\components\\\\info.js\";\nimport React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { mdiInformationOutline } from '@mdi/js';\nimport Container from '@material-ui/core/Container';\nimport '../App.css';\nimport { Redirect } from 'react-router-dom';\nexport default class Info extends React.PureComponent {\n  constructor() {\n    super();\n    this.username = '';\n    this.name = '';\n    this.email = '';\n    this.dateOfBirth = '';\n    this.sex = '';\n    this.password = '';\n    this.err = '';\n  }\n\n  render() {\n    const st = this.props;\n\n    if (st.isRegister) {\n      return React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      });\n    }\n\n    if (st.CheckLoadRegister) {\n      this.err = 'Có lỗi xảy ra, vui lòng thử lại!!!';\n    }\n\n    return React.createElement(\"div\", {\n      className: \"loginLayout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"paper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      className: \"avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(InfoSharpIcon, {\n      className: \"InfoSharpIcon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Infomation\")), React.createElement(\"form\", {\n      className: \"form\",\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      autoComplete: \"name\",\n      name: \"Name\",\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      id: \"Name\",\n      onChange: event => {\n        this.name = event.target.value;\n      },\n      label: \"Full Name\",\n      autoFocus: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      variant: \"outlined\",\n      fullWidth: true,\n      id: \"DateOfBirth\",\n      label: \"Date Of Birth\",\n      onChange: event => {\n        this.dateOfBirth = event.target.value;\n      },\n      name: \"DateOfBirth\",\n      autoComplete: \"DateOfBirth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      variant: \"outlined\",\n      fullWidth: true,\n      id: \"sex\",\n      label: \"Sex\",\n      onChange: event => {\n        this.sex = event.target.value;\n      },\n      name: \"sex\",\n      autoComplete: \"sex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      id: \"username\",\n      onChange: event => {\n        this.username = event.target.value;\n      },\n      label: \"Username\",\n      name: \"username\",\n      autoComplete: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      variant: \"outlined\",\n      fullWidth: true,\n      id: \"email\",\n      onChange: event => {\n        this.email = event.target.value;\n      },\n      label: \"Email Address\",\n      name: \"email\",\n      autoComplete: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      onChange: event => {\n        this.password = event.target.value;\n      },\n      name: \"password\",\n      label: \"Password\",\n      type: \"password\",\n      id: \"password\",\n      autoComplete: \"current-password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"ErrorRegister\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, this.err), React.createElement(\"div\", {\n      className: \"GridForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(Button, {\n      fullWidth: true,\n      onClick: event => {\n        event.preventDefault();\n        st.Register(this.username, this.name, this.email, this.dateOfBirth, this.sex, this.password);\n      },\n      variant: \"contained\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Sign Up\")), React.createElement(Grid, {\n      container: true,\n      justify: \"flex-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(Link, {\n      href: \"/login\",\n      variant: \"body2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Already have an account? Sign in\")))))));\n  }\n\n}","map":{"version":3,"sources":["D:\\react\\caro\\src\\components\\info.js"],"names":["React","Avatar","Button","CssBaseline","TextField","Link","Grid","Typography","mdiInformationOutline","Container","Redirect","Info","PureComponent","constructor","username","name","email","dateOfBirth","sex","password","err","render","st","props","isRegister","CheckLoadRegister","event","target","value","preventDefault","Register"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,qBAAT,QAAsC,SAAtC;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAO,YAAP;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,eAAe,MAAMC,IAAN,SAAmBX,KAAK,CAACY,aAAzB,CAAuC;AACpDC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKC,IAAL,GAAY,EAAZ;AACA,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKC,WAAL,GAAmB,EAAnB;AACA,SAAKC,GAAL,GAAW,EAAX;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKC,GAAL,GAAW,EAAX;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAMC,EAAE,GAAG,KAAKC,KAAhB;;AACA,QAAID,EAAE,CAACE,UAAP,EAAmB;AACjB,aAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AACD,QAAIF,EAAE,CAACG,iBAAP,EAA0B;AACxB,WAAKL,GAAL,GAAW,oCAAX;AACD;;AACD,WACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,MAArB;AAA4B,MAAA,QAAQ,EAAC,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AAAe,MAAA,SAAS,EAAC,eAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAC,IAAtB;AAA2B,MAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,CADF,EASE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAuB,MAAA,UAAU,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,YAAY,EAAC,MADf;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,OAAO,EAAC,UAHV;AAIE,MAAA,QAAQ,MAJV;AAKE,MAAA,SAAS,MALX;AAME,MAAA,EAAE,EAAC,MANL;AAOE,MAAA,QAAQ,EAAEM,KAAK,IAAI;AACjB,aAAKX,IAAL,GAAYW,KAAK,CAACC,MAAN,CAAaC,KAAzB;AACD,OATH;AAUE,MAAA,KAAK,EAAC,WAVR;AAWE,MAAA,SAAS,MAXX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAgBE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,OAAO,EAAC,UADV;AAEE,MAAA,SAAS,MAFX;AAGE,MAAA,EAAE,EAAC,aAHL;AAIE,MAAA,KAAK,EAAC,eAJR;AAKE,MAAA,QAAQ,EAAEF,KAAK,IAAI;AACjB,aAAKT,WAAL,GAAmBS,KAAK,CAACC,MAAN,CAAaC,KAAhC;AACD,OAPH;AAQE,MAAA,IAAI,EAAC,aARP;AASE,MAAA,YAAY,EAAC,aATf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAhBF,EA6BE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,OAAO,EAAC,UADV;AAEE,MAAA,SAAS,MAFX;AAGE,MAAA,EAAE,EAAC,KAHL;AAIE,MAAA,KAAK,EAAC,KAJR;AAKE,MAAA,QAAQ,EAAEF,KAAK,IAAI;AACjB,aAAKR,GAAL,GAAWQ,KAAK,CAACC,MAAN,CAAaC,KAAxB;AACD,OAPH;AAQE,MAAA,IAAI,EAAC,KARP;AASE,MAAA,YAAY,EAAC,KATf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CA7BF,EA0CE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,OAAO,EAAC,UADV;AAEE,MAAA,QAAQ,MAFV;AAGE,MAAA,SAAS,MAHX;AAIE,MAAA,EAAE,EAAC,UAJL;AAKE,MAAA,QAAQ,EAAEF,KAAK,IAAI;AACjB,aAAKZ,QAAL,GAAgBY,KAAK,CAACC,MAAN,CAAaC,KAA7B;AACD,OAPH;AAQE,MAAA,KAAK,EAAC,UARR;AASE,MAAA,IAAI,EAAC,UATP;AAUE,MAAA,YAAY,EAAC,UAVf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CA1CF,EAwDE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,OAAO,EAAC,UADV;AAEE,MAAA,SAAS,MAFX;AAGE,MAAA,EAAE,EAAC,OAHL;AAIE,MAAA,QAAQ,EAAEF,KAAK,IAAI;AACjB,aAAKV,KAAL,GAAaU,KAAK,CAACC,MAAN,CAAaC,KAA1B;AACD,OANH;AAOE,MAAA,KAAK,EAAC,eAPR;AAQE,MAAA,IAAI,EAAC,OARP;AASE,MAAA,YAAY,EAAC,OATf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAxDF,EAqEE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,OAAO,EAAC,UADV;AAEE,MAAA,QAAQ,MAFV;AAGE,MAAA,SAAS,MAHX;AAIE,MAAA,QAAQ,EAAEF,KAAK,IAAI;AACjB,aAAKP,QAAL,GAAgBO,KAAK,CAACC,MAAN,CAAaC,KAA7B;AACD,OANH;AAOE,MAAA,IAAI,EAAC,UAPP;AAQE,MAAA,KAAK,EAAC,UARR;AASE,MAAA,IAAI,EAAC,UATP;AAUE,MAAA,EAAE,EAAC,UAVL;AAWE,MAAA,YAAY,EAAC,kBAXf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CArEF,CADF,EAsFE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgC,KAAKR,GAArC,CAtFF,EAuFE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,SAAS,MADX;AAEE,MAAA,OAAO,EAAEM,KAAK,IAAI;AAChBA,QAAAA,KAAK,CAACG,cAAN;AACAP,QAAAA,EAAE,CAACQ,QAAH,CACE,KAAKhB,QADP,EAEE,KAAKC,IAFP,EAGE,KAAKC,KAHP,EAIE,KAAKC,WAJP,EAKE,KAAKC,GALP,EAME,KAAKC,QANP;AAQD,OAZH;AAaE,MAAA,OAAO,EAAC,WAbV;AAcE,MAAA,KAAK,EAAC,SAdR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CAvFF,EA2GE,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAC,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,QAAX;AAAoB,MAAA,OAAO,EAAC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADF,CADF,CA3GF,CATF,CAFF,CADF,CADF;AAoID;;AAxJmD","sourcesContent":["import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { mdiInformationOutline } from '@mdi/js';\r\nimport Container from '@material-ui/core/Container';\r\nimport '../App.css';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default class Info extends React.PureComponent {\r\n  constructor() {\r\n    super();\r\n    this.username = '';\r\n    this.name = '';\r\n    this.email = '';\r\n    this.dateOfBirth = '';\r\n    this.sex = '';\r\n    this.password = '';\r\n    this.err = '';\r\n  }\r\n\r\n  render() {\r\n    const st = this.props;\r\n    if (st.isRegister) {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n    if (st.CheckLoadRegister) {\r\n      this.err = 'Có lỗi xảy ra, vui lòng thử lại!!!';\r\n    }\r\n    return (\r\n      <div className=\"loginLayout\">\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n          <div className=\"paper\">\r\n            <center>\r\n              <Avatar className=\"avatar\">\r\n                <InfoSharpIcon className=\"InfoSharpIcon\" />\r\n              </Avatar>\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                Infomation\r\n              </Typography>\r\n            </center>\r\n            <form className=\"form\" noValidate>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    autoComplete=\"name\"\r\n                    name=\"Name\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"Name\"\r\n                    onChange={event => {\r\n                      this.name = event.target.value;\r\n                    }}\r\n                    label=\"Full Name\"\r\n                    autoFocus\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    id=\"DateOfBirth\"\r\n                    label=\"Date Of Birth\"\r\n                    onChange={event => {\r\n                      this.dateOfBirth = event.target.value;\r\n                    }}\r\n                    name=\"DateOfBirth\"\r\n                    autoComplete=\"DateOfBirth\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    id=\"sex\"\r\n                    label=\"Sex\"\r\n                    onChange={event => {\r\n                      this.sex = event.target.value;\r\n                    }}\r\n                    name=\"sex\"\r\n                    autoComplete=\"sex\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"username\"\r\n                    onChange={event => {\r\n                      this.username = event.target.value;\r\n                    }}\r\n                    label=\"Username\"\r\n                    name=\"username\"\r\n                    autoComplete=\"username\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    onChange={event => {\r\n                      this.email = event.target.value;\r\n                    }}\r\n                    label=\"Email Address\"\r\n                    name=\"email\"\r\n                    autoComplete=\"email\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    onChange={event => {\r\n                      this.password = event.target.value;\r\n                    }}\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <div className=\"ErrorRegister\">{this.err}</div>\r\n              <div className=\"GridForm\">\r\n                <Button\r\n                  fullWidth\r\n                  onClick={event => {\r\n                    event.preventDefault();\r\n                    st.Register(\r\n                      this.username,\r\n                      this.name,\r\n                      this.email,\r\n                      this.dateOfBirth,\r\n                      this.sex,\r\n                      this.password\r\n                    );\r\n                  }}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                >\r\n                  Sign Up\r\n                </Button>\r\n              </div>\r\n              <Grid container justify=\"flex-end\">\r\n                <Grid item>\r\n                  <Link href=\"/login\" variant=\"body2\">\r\n                    Already have an account? Sign in\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}